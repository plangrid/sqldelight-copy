<idea-plugin version="2">
  <id>com.squareup.sqldelight</id>
  <name>SQLDelight</name>
  <category>Custom Languages</category>
  <vendor url="https://github.com/square">Square, Inc.</vendor>
  <idea-version
      since-build="145"
  />
  <depends>com.intellij.modules.lang</depends>
  <depends>org.jetbrains.kotlin</depends>

  <description><![CDATA[
      Generates typesafe Kotlin APIs from SQLite, and provides language
      features inside for SQLite inside the IDE.
    ]]></description>

  <change-notes><![CDATA[
  <p>
  1.2.0
  <ul>
    <li>New: [Runtime] Stable Flow api.</li>
    <li>Fix: [Gradle] Kotlin Native 1.3.50 support.</li>
    <li>Fix: [Gradle] Clean build sometimes fails.</li>
    <li>Fix: [Gradle] Running verify tasks prints "Could not retrieve functions"</li>
    <li>Fix: [Compile] Can't build project if query contains FTS table joined.</li>
    <li>Fix: [Gradle] Sporadic gradle build failure while having multiple database modules</li>
  </ul>
  </p>
  ]]></change-notes>


  <!-- Plugin's project components -->
  <project-components>
    <component>
      <implementation-class>com.squareup.sqldelight.intellij.SqlDelightProjectComponent</implementation-class>
    </component>
  </project-components>

  <extensions defaultExtensionNs="com.intellij">
    <fileTypeFactory implementation="com.squareup.sqldelight.intellij.lang.SqlDelightFileTypeFactory"/>
    <errorHandler implementation="com.squareup.sqldelight.intellij.SqlDelightErrorHandler" />

    <annotator language="SqlDelight"
        implementationClass="com.alecstrong.sqlite.psi.core.SqliteAnnotator" />
    <annotator language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.SqlDelightClassNameElementAnnotator" />
    <completion.contributor language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.SqlDelightClassCompletionContributor"/>
    <gotoDeclarationHandler
        implementation="com.squareup.sqldelight.intellij.SqlDelightGotoDeclarationHandler"/>
    <findUsagesHandlerFactory
        implementation="com.squareup.sqldelight.intellij.SqlDelightFindUsagesHandlerFactory"/>
    <renamePsiElementProcessor
        implementation="com.squareup.sqldelight.intellij.SqlDelightRenameProcessor"/>

    <lang.findUsagesProvider
        implementationClass="com.squareup.sqldelight.intellij.SqlDelightFindUsagesProvider"
        language="SqlDelight"/>
    <lang.parserDefinition language="SqlDelight"
        implementationClass="com.squareup.sqldelight.core.lang.SqlDelightParserDefinition"/>
    <!-- <lang.parserDefinition language="SqlDelightMigration"
        implementationClass="com.squareup.sqldelight.core.lang.MigrationParserDefinition"/> -->
    <lang.syntaxHighlighterFactory language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightSyntaxHighlighterFactory"/>
    <lang.commenter language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightCommenter"/>
    <lang.fileViewProviderFactory language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightFileViewProviderFactory"/>
    <lang.foldingBuilder language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightFoldingBuilder"/>
    <lang.psiStructureViewFactory language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightStructureViewFactory"/>
    <lang.braceMatcher language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightPairedBraceMatcher"/>

    <moduleService serviceInterface="com.squareup.sqldelight.core.SqlDelightFileIndex"
        serviceImplementation="com.squareup.sqldelight.intellij.FileIndex" />

    <projectService serviceInterface="com.squareup.sqldelight.core.SqlDelightProjectService"
        serviceImplementation="com.squareup.sqldelight.intellij.ProjectService" />

    <!-- Migration Extensions -->
    <lang.syntaxHighlighterFactory language="SqlDelightMigration"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightSyntaxHighlighterFactory"/>

    <intentionAction>
      <className>com.squareup.sqldelight.intellij.intentions.ExpandColumnNamesWildcardQuickFix</className>
      <category>SQLDelight</category>
    </intentionAction>
  </extensions>

  <actions>
    <action id="SQDelight.CopyAsSqlite" class="com.squareup.sqldelight.intellij.actions.CopyAsSqliteAction" text="Copy as SQLite">
      <add-to-group group-id="CutCopyPasteGroup" anchor="after" relative-to-action="$Copy"/>
      <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="$Copy"/>
      <keyboard-shortcut keymap="Mac OS X" first-keystroke="control shift C"/>
    </action>
  </actions>
</idea-plugin>
