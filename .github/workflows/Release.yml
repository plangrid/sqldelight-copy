name: Publish a release

on:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  macos-build:
    runs-on: macOS-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2
    - name: Publish the macOS artifacts
      env:
        ORG_GRADLE_PROJECT_SONATYPE_NEXUS_USERNAME: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPE_NEXUS_USERNAME }}
        ORG_GRADLE_PROJECT_SONATYPE_NEXUS_PASSWORD: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPE_NEXUS_PASSWORD }}
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_signingKey }}
      run: ./gradlew uploadArchives --no-daemon

  windows-build:
    runs-on: windows-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Publish the windows artifact
        env:
          ORG_GRADLE_PROJECT_SONATYPE_NEXUS_USERNAME: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_SONATYPE_NEXUS_PASSWORD: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_signingKey }}
        run: ./gradlew publishMingwPublicationToMavenRepository

  plugin-deploy:
    runs-on: macOS-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Publish the plugin artifacts
        env:
          ORG_GRADLE_PROJECT_SQLDELIGHT_BUGSNAG_KEY: ${{ secrets.ORG_GRADLE_PROJECT_SQLDELIGHT_BUGSNAG_KEY }}
          ORG_GRADLE_PROJECT_intellijPublishToken: ${{ secrets.ORG_GRADLE_PROJECT_intellijPublishToken }}
        run: ./gradlew publishPlugin

env:
  GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=false -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"
