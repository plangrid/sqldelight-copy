plugins {
  id 'org.jetbrains.kotlin.multiplatform'
  id 'com.squareup.sqldelight'
}

apply from: '../../../../gradle/dependencies.gradle'

repositories {
  maven {
    url "file://${projectDir.absolutePath}/../../../../build/localMaven"
  }
  mavenCentral()
  google()
  jcenter()
}


sqldelight {
  QueryWrapper {
    packageName = "com.squareup.sqldelight.integration"
  }
}

kotlin {
  targets {
    def buildForDevice = project.findProperty("device")?.toBoolean() ?: false
    def iosPreset = (buildForDevice) ? presets.iosArm64 : presets.iosX64
    targetFromPreset(iosPreset, 'ios') {
      binaries { framework() }
    }
  }

  sourceSets {
    commonMain {
      dependencies {
        implementation deps.kotlin.stdlib.common
      }
    }
    commonTest {
      dependencies {
        implementation deps.kotlin.test.common
        implementation deps.kotlin.test.commonAnnotations
        implementation deps.stately.core
        implementation "com.squareup.sqldelight:runtime:${com.squareup.sqldelight.VersionKt.VERSION}"
      }
    }
    iosMain {
      dependencies {
        implementation "com.squareup.sqldelight:native-driver:${com.squareup.sqldelight.VersionKt.VERSION}"
      }
    }
  }
}

task iosTest {
  def device = project.findProperty("iosDevice")?.toString() ?: "iPhone 8"
  dependsOn 'linkIos'
  group = JavaBasePlugin.VERIFICATION_GROUP
  description = "Runs tests for target 'ios' on an iOS simulator"

  doLast {
    def binary = kotlin.targets.ios.binaries.getTest('DEBUG').outputFile
    exec {
      commandLine 'xcrun', 'simctl', 'spawn', '--standalone', device, binary.absolutePath
    }
  }
}