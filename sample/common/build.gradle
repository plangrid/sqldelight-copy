apply plugin: 'org.jetbrains.kotlin.multiplatform'
apply plugin: 'org.jetbrains.kotlin.native.cocoapods'
apply plugin: 'com.squareup.sqldelight'

archivesBaseName = 'sample-common'

sqldelight {
  HockeyDb {
    packageName = "com.example.sqldelight.hockey"
  }
}

version = 1.0

kotlin {
  // Configure common.
  sourceSets.commonMain.dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
  }
  sourceSets.commonTest.dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-test-common'
    implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
  }

  // Configure jvm.
  jvm()
  sourceSets.jvmTest.dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-test-junit'
    implementation "com.squareup.sqldelight:sqlite-driver:${versions.sqldelight}"
  }

  // Configure web.
  // Disable temporarily
  /*js {
    useCommonJs()
    browser {
      testTask {
        useMocha {
          timeout = "5s"
        }
      }
    }
  }
  sourceSets.jsMain.dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
    implementation npm('dateformat', '3.0.3')
  }
  sourceSets.jsTest.dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-test-js'
    implementation deps.kotlin.coroutines.js
    implementation project(':drivers:sqljs-driver')
  }*/

  // Configure iOS.
  def sdkName = System.getenv("SDK_NAME")
  if (sdkName != null && sdkName.startsWith("iphoneos")) {
    iosArm64("ios")
  } else {
    iosX64("ios")
  }
  sourceSets.iosMain.dependencies {
    implementation "com.squareup.sqldelight:native-driver:${versions.sqldelight}"
  }
  cocoapods {
    summary = "Common core for SQLDelight sample."
    homepage = "https://github.com/cashapp/sqldelight/tree/master/sample/common"
  }
}